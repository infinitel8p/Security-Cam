"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7353],{3031:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"switch-to-raspberry-pi-zero-2","metadata":{"permalink":"/Security-Cam/blog/switch-to-raspberry-pi-zero-2","editUrl":"https://github.com/infinitel8p/Security-Cam/edit/main/documentation/blog/2024-08-22-raspberry-pi-zero-2.mdx","source":"@site/blog/2024-08-22-raspberry-pi-zero-2.mdx","title":"Upgrading to the Raspberry Pi Zero 2 W","description":"The Raspberry Pi Zero 2 W","date":"2024-08-22T00:00:00.000Z","tags":[{"inline":false,"label":"Server","permalink":"/Security-Cam/blog/tags/server","description":"Web Interface related posts."},{"inline":true,"label":"rasperry","permalink":"/Security-Cam/blog/tags/rasperry"}],"readingTime":1.775,"hasTruncateMarker":false,"authors":[{"name":"Ludovico Ferrara","title":"Maintainer of Security-Cam","url":"https://github.com/infinitel8p","imageURL":"https://avatars.githubusercontent.com/u/50703696?s=400&u=761df587f17316eb28a4768b8092ec4dbc137f1c&v=4","key":"ludo","page":null}],"frontMatter":{"slug":"switch-to-raspberry-pi-zero-2","title":"Upgrading to the Raspberry Pi Zero 2 W","authors":["ludo"],"tags":["server","rasperry"]},"unlisted":false,"nextItem":{"title":"Fix the stream","permalink":"/Security-Cam/blog/fix-the-stream"}},"content":"### The Raspberry Pi Zero 2 W\\r\\n\\r\\nThe Raspberry Pi Zero 2 W is a small yet remarkably powerful single-board computer, perfectly suited for projects requiring a compact form factor with minimal energy consumption. Powered by a quad-core ARM Cortex-A53 processor and equipped with 512MB of RAM, the Pi Zero 2 W also boasts built-in wireless connectivity, making it a versatile tool for a variety of applications.\\r\\n\\r\\n### The need for an upgrade\\r\\n\\r\\nInitially, I was running a Next.js server on the original Raspberry Pi Zero. However, I encountered limitations due to the maximum supported version of Node.js on that hardware. These constraints led to performance bottlenecks and compatibility issues, particularly as newer versions of Node.js were required for the project.\\r\\n\\r\\n## Transitioning to the Raspberry Pi Zero 2 W\\r\\n\\r\\nTo ensure a smooth transition, we prebuilt the Next.js server on a MacBook. This approach allowed me to leverage the MacBook\u2019s processing power to compile and optimize the server before deploying it to the Raspberry Pi Zero 2 W. Once the server was prebuilt, transferring it to the Pi Zero 2 W was straightforward, and it ran flawlessly on the new hardware.\\r\\n\\r\\n## The headaches\\r\\n\\r\\nWhile the transition to the Raspberry Pi Zero 2 W for testing our basic server setup was relatively seamless, it necessitated rewriting the setup documentation to reflect the new hardware. This involved updating installation instructions, including the necessary dependencies and configurations. A particular challenge arose with the fact that Raspbian Bookworm no longer supports the legacy camera module. This required some investigation to get the camera working on the new Raspberry Pi Zero 2 W. Fortunately, while `libcamera` struggled to detect the camera, `open-cv` handled it without issues. Since we recently switched to `open-cv` for the security cam project, this didn\u2019t turn out to be a major setback.\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nAfter a few hours of troubleshooting and updating the documentation, the server was up and running on the Raspberry Pi Zero 2 W. The new hardware provides a significant performance boost, allowing the server to run more efficiently. The transition to the Raspberry Pi Zero 2 W was a success."},{"id":"fix-the-stream","metadata":{"permalink":"/Security-Cam/blog/fix-the-stream","editUrl":"https://github.com/infinitel8p/Security-Cam/edit/main/documentation/blog/2024-08-21-stream.mdx","source":"@site/blog/2024-08-21-stream.mdx","title":"Fix the stream","description":"Fixing old issues","date":"2024-08-21T00:00:00.000Z","tags":[{"inline":false,"label":"Stream","permalink":"/Security-Cam/blog/tags/stream","description":"Stream related posts."},{"inline":false,"label":"Python","permalink":"/Security-Cam/blog/tags/python","description":"Python related posts."},{"inline":false,"label":"Dashboard","permalink":"/Security-Cam/blog/tags/dashboard","description":"Web Interface related posts."}],"readingTime":0.885,"hasTruncateMarker":true,"authors":[{"name":"Ludovico Ferrara","title":"Maintainer of Security-Cam","url":"https://github.com/infinitel8p","imageURL":"https://avatars.githubusercontent.com/u/50703696?s=400&u=761df587f17316eb28a4768b8092ec4dbc137f1c&v=4","key":"ludo","page":null}],"frontMatter":{"slug":"fix-the-stream","title":"Fix the stream","authors":["ludo"],"tags":["stream","python","dashboard"]},"unlisted":false,"prevItem":{"title":"Upgrading to the Raspberry Pi Zero 2 W","permalink":"/Security-Cam/blog/switch-to-raspberry-pi-zero-2"},"nextItem":{"title":"Build a Dashboard","permalink":"/Security-Cam/blog/starting-the-dashboard"}},"content":"### Fixing old issues\\r\\n\\r\\nIn my previous setup, I used `picamera` for recording and streaming video on the Raspberry Pi. However, I noticed a recurring issue: the video stream would consistently freeze whenever a recording started, only resuming after the recording was complete. While this wasn\'t a big problem, it was frustrating enough to warrant a closer look.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nTo address this, I decided to explore an alternative approach using `OpenCV`. I wrote a small test script that streams frames to a `Flask` endpoint. After modifying the `ClientVideoPlayer` component in our placeholder dashboard, I successfully established a stable video stream. The next step was to test whether the video could be recorded while maintaining a continuous and stable feed to the dashboard\u2014and I\'m happy to report that this was a success.\\r\\n\\r\\nAs a result, we\'re transitioning from using `picamera` and `WebSockets` for streaming to using `Flask` and `OpenCV`. While I still have a few more tests to conduct before finalizing this decision, resolving the most frustrating issue from the old code feels like a significant step forward."},{"id":"starting-the-dashboard","metadata":{"permalink":"/Security-Cam/blog/starting-the-dashboard","editUrl":"https://github.com/infinitel8p/Security-Cam/edit/main/documentation/blog/2024-07-25-start.mdx","source":"@site/blog/2024-07-25-start.mdx","title":"Build a Dashboard","description":"Starting to build the Dashboard","date":"2024-07-25T00:00:00.000Z","tags":[{"inline":false,"label":"Dashboard","permalink":"/Security-Cam/blog/tags/dashboard","description":"Web Interface related posts."},{"inline":false,"label":"Next","permalink":"/Security-Cam/blog/tags/next","description":"Next.js related posts."}],"readingTime":0.655,"hasTruncateMarker":true,"authors":[{"name":"Ludovico Ferrara","title":"Maintainer of Security-Cam","url":"https://github.com/infinitel8p","imageURL":"https://avatars.githubusercontent.com/u/50703696?s=400&u=761df587f17316eb28a4768b8092ec4dbc137f1c&v=4","key":"ludo","page":null},{"name":"Lennert Pfundtner","title":"Front End Engineer","url":"https://github.com/KrokoNinja","imageURL":"https://avatars.githubusercontent.com/u/79910460?v=4","key":"lenni","page":null}],"frontMatter":{"slug":"starting-the-dashboard","title":"Build a Dashboard","authors":["ludo","lenni"],"tags":["dashboard","next"]},"unlisted":false,"prevItem":{"title":"Fix the stream","permalink":"/Security-Cam/blog/fix-the-stream"},"nextItem":{"title":"The start of something new","permalink":"/Security-Cam/blog/welcome"}},"content":"### Starting to build the Dashboard\\r\\n\\r\\nToday we started building the first steps of the dashboard. We chose NextJS with TypeScript and TailwindCSS as the main technologies.\\r\\nBefore that we talked about how to integrate the video stream and found out about the ability of the HTML5 video tag to stream a video via RTSP.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nNow the decision was easy as Lenni is used to coding with NextJS.\\r\\nSo we began installing the necessary packages and setting up the project.\\r\\n\\r\\n```bash\\r\\nnpx create-next-app@latest\\r\\n```\\r\\n\\r\\nFirst step was made and we started to delete the boilerplate code and build our first component.\\r\\nDesign isnt necessary at this point. We just want to have something running to try out streaming as soon as possible.\\r\\n\\r\\nFirst steps are done and more to come."},{"id":"welcome","metadata":{"permalink":"/Security-Cam/blog/welcome","editUrl":"https://github.com/infinitel8p/Security-Cam/edit/main/documentation/blog/2024-07-19-welcome.mdx","source":"@site/blog/2024-07-19-welcome.mdx","title":"The start of something new","description":"Welcome on our journey","date":"2024-07-19T00:00:00.000Z","tags":[{"inline":false,"label":"Hello","permalink":"/Security-Cam/blog/tags/hello","description":"Hello World!"}],"readingTime":0.43,"hasTruncateMarker":true,"authors":[{"name":"Ludovico Ferrara","title":"Maintainer of Security-Cam","url":"https://github.com/infinitel8p","imageURL":"https://avatars.githubusercontent.com/u/50703696?s=400&u=761df587f17316eb28a4768b8092ec4dbc137f1c&v=4","key":"ludo","page":null},{"name":"Lennert Pfundtner","title":"Front End Engineer","url":"https://github.com/KrokoNinja","imageURL":"https://avatars.githubusercontent.com/u/79910460?v=4","key":"lenni","page":null}],"frontMatter":{"slug":"welcome","title":"The start of something new","authors":["ludo","lenni"],"tags":["hello"]},"unlisted":false,"prevItem":{"title":"Build a Dashboard","permalink":"/Security-Cam/blog/starting-the-dashboard"}},"content":"### Welcome on our journey\\r\\n\\r\\nWe mark the 19th of July 2024, the day we start to rebuild this project.  \\r\\nAfter a long time of inactivity, we decided to start from scratch and rebuild most of the stuff we already did.\\r\\nWe are excited to see where this journey will take us.  \\r\\nThis blog will be the place where we share our progress and thoughts (In case we become some famous dudes in the future).\\r\\n\\r\\n```py\\r\\nprint(\\"Hello World\\")\\r\\n```\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n<button onClick={() => alert(\\"button clicked!\\")}>Click me!</button>"}]}}')}}]);
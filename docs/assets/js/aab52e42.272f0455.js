"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6063],{1121:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>o,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var i=t(4848),r=t(8453);const s={sidebar_position:1,description:"Step 1: Setup the hardware components"},a="Hardware Setup",d={id:"setup/hardware",title:"Hardware Setup",description:"Step 1: Setup the hardware components",source:"@site/docs/setup/hardware.mdx",sourceDirName:"setup",slug:"/setup/hardware",permalink:"/Security-Cam/docs/setup/hardware",draft:!1,unlisted:!1,editUrl:"https://github.com/infinitel8p/Security-Cam/edit/main/documentation/docs/setup/hardware.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Step 1: Setup the hardware components"},sidebar:"tutorialSidebar",previous:{title:"Setup",permalink:"/Security-Cam/docs/category/setup"},next:{title:"WiFi Setup",permalink:"/Security-Cam/docs/setup/wifi"}},c={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installations",id:"installations",level:3},{value:"Camera",id:"camera",level:2},{value:"Camera Setup",id:"camera-setup",level:3},{value:"Test the Camera",id:"test-the-camera",level:3},{value:"Magnet Reed Switch",id:"magnet-reed-switch",level:2},{value:"KY-025 connection",id:"ky-025-connection",level:3},{value:"Raspberry Pi connection",id:"raspberry-pi-connection",level:3},{value:"Test the Magnet Reed Switch",id:"test-the-magnet-reed-switch",level:3},{value:"Real Time Clock Module",id:"real-time-clock-module",level:2},{value:"DS3231 connection",id:"ds3231-connection",level:3},{value:"Raspberry Pi connection",id:"raspberry-pi-connection-1",level:3},{value:"Enable I2C Interface",id:"enable-i2c-interface",level:3},{value:"To enable the I2C interface, run the following command on the Raspberry Pi:",id:"to-enable-the-i2c-interface-run-the-following-command-on-the-raspberry-pi",level:4},{value:"Install the required packages:",id:"install-the-required-packages",level:4},{value:"Test the DS3231 RTC module:",id:"test-the-ds3231-rtc-module",level:4},{value:"Configure the I2C-Bus for the x68 address:",id:"configure-the-i2c-bus-for-the-x68-address",level:4},{value:"Set the System Time:",id:"set-the-system-time",level:4},{value:"Enable automatic bus configuration:",id:"enable-automatic-bus-configuration",level:4},{value:"Disable the fake-hwclock:",id:"disable-the-fake-hwclock",level:4},{value:"Reboot the Raspberry Pi:",id:"reboot-the-raspberry-pi",level:4}];function h(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"hardware-setup",children:"Hardware Setup"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please ignore possible occurences of the Raspberry Pi Zero ",(0,i.jsx)(n.strong,{children:"1"})," W in the instructions. The instructions were originally written for the Raspberry Pi Zero W but were updated to work with the Raspberry Pi Zero 2 W as it is recommended for it's better performance."]})}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.raspberrypi.com/products/raspberry-pi-zero-2-w/",children:"Raspberry Pi Zero 2 W"})," (or Raspberry Pi Zero 2 WH)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://amzn.eu/d/hULoAo6",children:"Headers"})," for the Raspberry Pi Zero 2 W if you did not choose a Raspberry Pi Zero 2 WH (if you do not feel comfortable soldering the headers you can use solderless headers such as these ",(0,i.jsx)(n.a,{href:"https://www.berrybase.de/en/solderless-stiftleiste-2x-20-polig-rm-2-54-gerade",children:"here"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.berrybase.de/en/noir-kamera-fuer-raspberry-pi-mit-einstellbarem-fokus-und-infrarot-leds",children:"Waveshare RPi Camera (F)"})," or another compatible camera module"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.berrybase.de/en/flexkabel-fuer-raspberry-pi-zero-und-kameramodul?number=RPIZ-FLEX-15",children:"Flexcable adapter"})," for the camera module"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://amzn.eu/d/grjoopD",children:"KY-025 module"})," (Magnetic reed switch)"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://amzn.eu/d/ikNTko8",children:"DS3231 Real Time Clock Module"})}),"\n",(0,i.jsxs)(n.li,{children:["a bunch of ",(0,i.jsx)(n.a,{href:"https://amzn.eu/d/6ZgE4N6",children:"Dupont Jumper Wires"})]}),"\n",(0,i.jsx)(n.li,{children:"Breadboard (optional)"}),"\n",(0,i.jsx)(n.li,{children:"Bluetooth-enabled device (e.g., a smartphone) to pair with the Raspberry Pi"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["It is assumed that the Raspberry Pi Zero 2 W is already set up and running (Optional - set up VNC if you have a hard time working in a headless setup). If you need help setting up the Raspberry Pi Zero 2 W, please refer to the official ",(0,i.jsx)(n.a,{href:"https://www.raspberrypi.org/documentation/",children:"Raspberry Pi Documentation"}),"."]})}),"\n",(0,i.jsx)(n.h3,{id:"installations",children:"Installations"}),"\n",(0,i.jsx)(n.p,{children:"Clone the Repository to the Raspberry Pi first:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo git clone https://github.com/infinitel8p/Security-Cam.git /opt/security-cam\nsudo chown -R pi:pi /opt/security-cam\nsudo chmod -R u+rwX /opt/security-cam\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now install Node.js, npm and Python3"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt update && sudo apt upgrade -y\nsudo apt install nodejs npm python3 python3-pip -y\n"})}),"\n",(0,i.jsx)(n.p,{children:"After the installation is complete install the required Python and Node.js packages:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd /opt/security-cam\nsudo chmod +x install_requirements.sh\nsudo ./install_requirements.sh\n"})}),"\n",(0,i.jsx)(n.h2,{id:"camera",children:"Camera"}),"\n",(0,i.jsx)(n.p,{children:"Attach the camera to the Raspberry Pi. You will need a flex cable adapter for the Pi Zero for the camera module since the Raspberry Pi Zero has a smaller smaller connector than the standard camera module. The camera should be attached to the Raspberry Pi as shown below."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/infinitel8p/Security-Cam/assets/50703696/3232fdbe-9dc6-491a-aeac-1ead849368fb",alt:"270868898-25d4370a-b620-4d31-9c9b-fb232d06bef7"})}),"\n",(0,i.jsx)(n.p,{children:"If connected properly you should see a faint red glow from the camera's infrared LEDs when the raspberry is turned on."}),"\n",(0,i.jsx)(n.h3,{id:"camera-setup",children:"Camera Setup"}),"\n",(0,i.jsxs)(n.p,{children:["Edit the ",(0,i.jsx)(n.code,{children:"/boot/firmware/config.txt"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo sh -c 'echo \"start_x=1\" >> /boot/firmware/config.txt'\nsudo sed -i 's/camera_auto_detect=1/camera_auto_detect=0/' /boot/firmware/config.txt\nsudo reboot\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will enable the camera interface and disable the camera auto-detection feature. The Raspberry Pi will then reboot."}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["If you use ",(0,i.jsx)(n.code,{children:"OV9281"}),", ",(0,i.jsx)(n.code,{children:"IMX290"}),", ",(0,i.jsx)(n.code,{children:"IMX378"})," or non-Raspberry Pi official ",(0,i.jsx)(n.code,{children:"IMX219"})," and ",(0,i.jsx)(n.code,{children:"IMX477"})," cameras, you need to configure the config.txt file separately:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title="/boot/firmware/config.txt"',children:"sudo sh -c 'echo \"start_x=1\" >> /boot/firmware/config.txt'\nsudo nano /boot/firmware/config.txt\n"})}),(0,i.jsxs)(n.p,{children:["Find ",(0,i.jsx)(n.code,{children:"camera_auto_detect=1"})," and modify it to ",(0,i.jsx)(n.code,{children:"camera_auto_detect=0"}),".\nAt the end of the file, add the following setting statements according to the camera model:"]}),(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Camera Model"}),(0,i.jsx)(n.th,{children:"Setting Statement"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"OV9281"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"dtoverlay=ov9281"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"IMX290/IMX327"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"dtoverlay=imx290, clock-frequency=37125000"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"IMX477"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"dtoverlay=imx477"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"IMX378"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"dtoverlay=imx378"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"IMX219"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"dtoverlay=imx219"})})]})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"test-the-camera",children:"Test the Camera"}),"\n",(0,i.jsxs)(n.p,{children:["The WaveShare RPi Camera (F) has a OV5647 sensor which should be supported by ",(0,i.jsx)(n.code,{children:"libcamera"})," and ",(0,i.jsx)(n.code,{children:"Raspicam"})," (Raspbian Buster).",(0,i.jsx)(n.br,{}),"\n","Check if the camera is detected by the Raspberry Pi with the following command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"vcgencmd get_camera\n"})}),"\n",(0,i.jsx)(n.p,{children:"This should return something like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title="Example Output:"',children:"pi@securitycam:~ $ vcgencmd get_camera\nsupported=1 detected=1, libcamera interfaces=0\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now test the camera with the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python3 -c \"import cv2; cap=cv2.VideoCapture(0); ret,frame=cap.read(); cv2.imwrite('opencv_test.jpg', frame) if ret else print('Error: Could not read frame'); cap.release()\"\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This should take a picture and save it as ",(0,i.jsx)(n.code,{children:"opencv_test.jpg"})," in the current directory. You can now either view the image on the Raspberry Pi or transfer it to your computer to view it there."]}),"\n",(0,i.jsx)(n.h2,{id:"magnet-reed-switch",children:"Magnet Reed Switch"}),"\n",(0,i.jsxs)(n.p,{children:["If you have a Raspberry Pi Zero 2 W and you have not yet soldered the GPIO header, do it now (You should probably remove the camera flex cable from the raspberry first).",(0,i.jsx)(n.br,{}),"\n","The magnet reed switch will be connected to the Raspberry Pi as shown below."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/infinitel8p/Security-Cam/assets/50703696/56c40de5-69e2-4397-9365-49f6284a3ebe",alt:"20230927_072021"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"This is the connection layout using a breadboard. The magnet reed can also just be connected directly to the Raspberry Pi skipping the breadboard."})}),"\n",(0,i.jsx)(n.h3,{id:"ky-025-connection",children:"KY-025 connection"}),"\n",(0,i.jsx)(n.p,{children:"The pinout on the KY-025 module with the already connected jumper wires is shown below."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/infinitel8p/Security-Cam/assets/50703696/6ec39776-6104-42eb-9780-88899c248223",alt:"image"})}),"\n",(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsx)("div",{style:{flex:1,paddingRight:"10px"},children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"KY-025 Pin"}),(0,i.jsx)(n.th,{children:"Wire"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"GND"})}),(0,i.jsx)(n.td,{children:"Black Jumper Wire"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"DO"})}),(0,i.jsx)(n.td,{children:"Blue Jumper Wire"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"+ (VCC)"})}),(0,i.jsx)(n.td,{children:"Red Jumper Wire"})]})]})]})}),(0,i.jsx)("div",{style:{flex:1},children:(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The KY-025 module has a fourth pin, marked with ",(0,i.jsx)(n.code,{children:"AO"}),". This is the analog output pin and is not used in this project since the Raspberry Pi does not have an analog input pin and a converter such as the ADS1115 would be required to use it."]})})})]}),"\n",(0,i.jsx)(n.h3,{id:"raspberry-pi-connection",children:"Raspberry Pi connection"}),"\n",(0,i.jsx)(n.p,{children:"The pinout on the Raspberry Pi with the already connected jumper wires is shown below."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/infinitel8p/Security-Cam/assets/50703696/9993c261-44fc-419b-ae6c-81c62854a4c3",alt:"image"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/infinitel8p/Security-Cam/assets/50703696/3438075e-0989-4f01-a75a-cd3aa3f42bbd",alt:"image"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Raspberry Pi Pin"}),(0,i.jsx)(n.th,{children:"Wire"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"[pin 14] GND"})}),(0,i.jsx)(n.td,{children:"Black Jumper Wire"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"[pin 15] GPIO22"})}),(0,i.jsx)(n.td,{children:"Blue Jumper Wire"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"[pin 17] 3V3"})}),(0,i.jsx)(n.td,{children:"Red Jumper Wire"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"test-the-magnet-reed-switch",children:"Test the Magnet Reed Switch"}),"\n",(0,i.jsxs)(n.p,{children:["If connected properly in the previous step, the red LED on the KY-025 module should be lit up when the Raspberry Pi is turned on.",(0,i.jsx)(n.br,{}),"\n","To test the magnet reed switch, create the following python script on the Raspberry Pi:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"nano test.py\n"})}),"\n",(0,i.jsx)(n.p,{children:"Paste the following code into the file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="test.py"',children:'import RPi.GPIO as GPIO\nfrom time import sleep\n\nGPIO.setmode(GPIO.BCM)\nGPIO.setwarnings(False)\n\nDigital_Pin = 22\nGPIO.setup(Digital_Pin, GPIO.IN)\n\ntry:\n    while True:\n        if GPIO.input(Digital_Pin):\n            print("Magnet Detected!")\n        else:\n            print("No Magnet")\n        sleep(1)\nexcept KeyboardInterrupt:\n    print("\\nScript closed!")\n\nfinally:\n    GPIO.cleanup()\n'})}),"\n",(0,i.jsx)(n.p,{children:"Save the file and exit the editor. Run the script with the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python3 test.py\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now test the switch. When you come near the sensor with a magnet the script should print ",(0,i.jsx)(n.code,{children:"Magnet Detected!"})," if the magnet reed switch is triggered and ",(0,i.jsx)(n.code,{children:"No Magnet"})," if it is not."]}),"\n",(0,i.jsx)(n.h2,{id:"real-time-clock-module",children:"Real Time Clock Module"}),"\n",(0,i.jsx)(n.h3,{id:"ds3231-connection",children:"DS3231 connection"}),"\n",(0,i.jsx)(n.p,{children:"The pinout on the DS3231 module is shown below."}),"\n",(0,i.jsxs)("div",{style:{display:"flex"},children:[(0,i.jsx)("img",{src:"https://github.com/infinitel8p/Security-Cam/assets/50703696/23d48c70-2e41-4f6f-baf1-836163926949",alt:"Image 1",width:"400"}),(0,i.jsx)("img",{src:"https://github.com/infinitel8p/Security-Cam/assets/50703696/be0c37e0-1c15-44e3-8dba-51f63615c5c3",alt:"Image 2",width:"400"})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"DS3231 Pin"}),(0,i.jsx)(n.th,{children:"Wire"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"3.3V"})}),(0,i.jsx)(n.td,{children:"Red Wire"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"SDA"})}),(0,i.jsx)(n.td,{children:"Orange Wire"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"NC"})}),(0,i.jsx)(n.td,{children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"SCK"})}),(0,i.jsx)(n.td,{children:"Yellow Wire"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"GND"})}),(0,i.jsx)(n.td,{children:"Green Wire"})]})]})]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The DS3231 module has a fifth pin, marked with ",(0,i.jsx)(n.code,{children:"NC"}),'. This "NC" (Not Connected) pin is not used or connected to anything. (obviously)']})}),"\n",(0,i.jsx)(n.h3,{id:"raspberry-pi-connection-1",children:"Raspberry Pi connection"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/infinitel8p/Security-Cam/assets/50703696/b1fa89fb-877d-44ab-9870-e8b178a2d528",alt:"20230927_172741"})}),"\n",(0,i.jsxs)("div",{style:{display:"flex",alignItems:"center"},children:[(0,i.jsxs)("div",{style:{flex:1,marginRight:"20px"},children:[(0,i.jsxs)("table",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Raspberry Pi Pin"}),(0,i.jsx)("th",{children:"Wire"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("strong",{children:"[pin 1] 3V3"})}),(0,i.jsx)("td",{children:"Red Wire"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("strong",{children:"[pin 3] SDA"})}),(0,i.jsx)("td",{children:"Orange Wire"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("strong",{children:"[pin 5] SCL"})}),(0,i.jsx)("td",{children:"Yellow Wire"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("strong",{children:"[pin 6 or 9] GND"})}),(0,i.jsx)("td",{children:"Green Wire"})]})]}),(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["For the connections on the Raspberry you can refer the diagram shown ",(0,i.jsx)(n.a,{href:"#raspberry-pi-connection",children:"here"})," again"]})})]}),(0,i.jsx)("div",{style:{flex:1},children:(0,i.jsx)("img",{src:"https://github.com/infinitel8p/Security-Cam/assets/50703696/b317925d-4eb0-4f59-a70e-86bfebb64f05",alt:"Image 2",width:"400"})})]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"This is the connection layout using a breadboard. The clock can also just be connected directly to the Raspberry Pi skipping the breadboard as shown below."})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/infinitel8p/Security-Cam/assets/50703696/40ddedeb-509f-41e2-b50f-63aa0e9d1f3e",alt:"61JfhAHWeKL AC_SX679"})}),"\n",(0,i.jsx)(n.h3,{id:"enable-i2c-interface",children:"Enable I2C Interface"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h4,{id:"to-enable-the-i2c-interface-run-the-following-command-on-the-raspberry-pi",children:"To enable the I2C interface, run the following command on the Raspberry Pi:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo raspi-config nonint do_i2c 0\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h4,{id:"install-the-required-packages",children:"Install the required packages:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt-get install python3-smbus\nsudo apt-get install i2c-tools\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h4,{id:"test-the-ds3231-rtc-module",children:"Test the DS3231 RTC module:"}),"\n",(0,i.jsx)(n.p,{children:"You can use the following command to see if your Raspberry Pi detects the DS3231 RTC:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo i2cdetect -y 1\n"})}),"\n",(0,i.jsx)(n.p,{children:"You should see a number (usually 68 or 0x68) in the grid that corresponds to the module's address:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title="Example Output:"',children:"pi@securitycam:~ $ sudo i2cdetect -y 1\n0 1 2 3 4 5 6 7 8 9 a b c d e f\n00: -- -- -- -- -- -- -- --\n10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n60: -- -- -- -- -- -- -- -- 68 -- -- -- -- -- -- --\n70: -- -- -- -- -- -- -- --\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h4,{id:"configure-the-i2c-bus-for-the-x68-address",children:"Configure the I2C-Bus for the x68 address:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"echo ds3231 0x68 | sudo tee /sys/class/i2c-adapter/i2c-1/new_device\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The command ",(0,i.jsx)(n.code,{children:"sudo hwclock"})," should now return the time from the RTC."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h4,{id:"set-the-system-time",children:"Set the System Time:"}),"\n",(0,i.jsx)(n.p,{children:"Synchronize the RTC time:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo hwclock -w\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will set the hardware clock to the current system time."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h4,{id:"enable-automatic-bus-configuration",children:"Enable automatic bus configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo sed -i '/^exit 0/i echo ds3231 0x68 > /sys/class/i2c-adapter/i2c-1/new_device' /etc/rc.local\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h4,{id:"disable-the-fake-hwclock",children:"Disable the fake-hwclock:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl disable fake-hwclock\nsudo systemctl stop fake-hwclock\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will prevent the fake-hwclock from overwriting the hardware clock at boot.\nIf you have internet and want to sync the RTC time with the time servers, you can manually run this command again:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo hwclock -w\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h4,{id:"reboot-the-raspberry-pi",children:"Reboot the Raspberry Pi:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo reboot\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"With the RTC module connected and configured, the Raspberry Pi will now use the RTC module to keep track of the time even when it is turned off."}),"\n",(0,i.jsxs)(n.p,{children:["Continue to ",(0,i.jsx)(n.a,{href:"./wifi",children:"wifi.md"})," to set up the Raspberry Pi as an access point and connect to it."]})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);